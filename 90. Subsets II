class Solution:
    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:
        result = []
        nums.sort()
        self.backtracking(nums,0,[],result)
        return result 

    def backtracking(self,nums,startIdx,path,result):
        result.append(path[:])
        for i in range(startIdx,len(nums)):
            if i > startIdx and nums[i] == nums[i - 1]:
                continue
            path.append(nums[i])
            self.backtracking(nums,i+1,path,result)
            path.pop()
