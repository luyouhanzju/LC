Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:

Integers in each row are sorted in ascending from left to right.
Integers in each column are sorted in ascending from top to bottom.

class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        rowLen,columnLen = len(matrix),len(matrix[0])
        x = 0
        y = columnLen - 1
        while x < rowLen and y >= 0:
            if matrix[x][y] == target:
                return True
            elif matrix[x][y] > target:
                y = y - 1
            else: 
                x = x + 1
        return False
